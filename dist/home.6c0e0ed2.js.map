{"version":3,"sources":["views/home.vue"],"names":[],"mappings":"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","file":"home.6c0e0ed2.js","sourceRoot":"../src","sourcesContent":["<template>\n    <div>\n        <nd-hero></nd-hero>\n        <div class=\"govuk-width-container\">\n            <main class=\"govuk-main-wrapper\">\n                <div class=\"govuk-grid-row\">\n                    <div class=\"govuk-grid-column-three-quarters govuk-!-padding-bottom-6\">\n                        <nd-thumbnail url=\"/podnet\"></nd-thumbnail>\n                    </div>\n                </div>\n                <nd-table :data=\"tableData\" :options=\"tableOptions\"></nd-table>\n                <nd-button>Zobraziť viac</nd-button>\n            </main>\n        </div>\n    </div>\n</template>\n\n<script>\n//TODO: Add notification about new jira issues\nexport default {\n    data() {\n        return {\n            tableOptions: {\n                caption: \"Čo aktuálne riešime\"\n            },\n            jiraData: null\n        };\n    },\n    computed: {\n        tableData: function() {\n            let jiraData = this.jiraData;\n            let table = {\n                head: [\n                    {\n                        type: null,\n                        text: \"Podnet\"\n                    },\n                    {\n                        type: null,\n                        text: \"Kategória\"\n                    },\n                    {\n                        type: null,\n                        text: \"Dátum\"\n                    }\n                ],\n                body: []\n            };\n            if (jiraData) {\n                // FIXME: the customfield is hardcoded\n                const categoryName = issue => {\n                    if (\n                        issue &&\n                        issue.fields &&\n                        issue.fields.customfield_10204\n                    ) {\n                        if (issue.fields.customfield_10204.child) {\n                            return `${issue.fields.customfield_10204.value} - ${issue.fields.customfield_10204.child.value}`;\n                        } else {\n                            return `${issue.fields.customfield_10204.value}`;\n                        }\n                    }\n                    return \"\";\n                };\n\n                const niceDate = date => {\n                    const dateObj = new Date(date);\n                    return `${dateObj.getDate()}. ${dateObj.getMonth() +\n                        1}. ${dateObj.getFullYear()}`;\n                };\n\n                jiraData.data.issues.forEach(issue => {\n                    let row = {\n                        url: issue.self,\n                        data: {\n                            summary: issue.fields.summary,\n                            category: categoryName(issue),\n                            date: niceDate(issue.fields.created)\n                        }\n                    };\n\n                    table.body.push(row);\n                });\n            }\n            return table;\n        }\n    },\n    methods: {\n        getJiraData: async function() {\n            const searchURL = \"https://lepsiesluzby.sk/jira/rest/api/2/search\";\n            const params = {\n                jql:\n                    \"project = SDM  AND component = e-services ORDER BY created DESC\",\n                fields: \"summary,created,customfield_10204\",\n                maxResults: \"5\"\n            };\n\n            const response = await this.axios.get(searchURL, { params });\n\n            return response;\n        }\n    },\n    mounted: async function() {\n        this.jiraData = await this.getJiraData();\n    }\n};\n</script>\n\n<style>\n</style>\n"]}